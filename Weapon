public interface IDamagable
{
    public void TakeDamage(int damage);
}

class Player : IDamagable
{
    private int _health;

    public Player(int health)
    {
        if (health <= 0)
            throw new ArgumentException();

        _health = health;
    }

    public void TakeDamage(int damage)
    {
        if (damage < 0)
            throw new ArgumentException();

        _health -= damage;

        if (_health < 0)
            _health = 0;
    }
}

class Bot
{
    private readonly Weapon _weapon;

    public Bot(Weapon weapon)
    {
        if (weapon == null)
            throw new ArgumentException();

        _weapon = weapon;
    }

    private void OnSeePlayer(IDamagable damagable)
    {
        if (damagable == null)
            throw new ArgumentException();

        _weapon.Fire(damagable);
    }
}

class Weapon
{
    private int _damage;
    private int _bullets;

    public Weapon(int damage, int bullets)
    {
        if (damage < 0 || bullets < 0)
            throw new ArgumentException();

        _damage = damage;
        _bullets = bullets;
    }

    public void Fire(IDamagable damagable)
    {
        if (_bullets <= 0)
            throw new ArgumentException();

        damagable.TakeDamage(_damage);
        _bullets--;
    }
}
